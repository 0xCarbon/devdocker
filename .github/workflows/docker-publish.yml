name: Docker

on:
  schedule:
    - cron: '35 19 * * 0' # Run at 19:35 every Sunday
  push:
    branches: ['main']
    tags: ['v*.*.*']
    paths:
      - 'Dockerfile.*'
  pull_request:
    branches: ['main']
    paths:
      - 'Dockerfile.*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06
        with:
          cosign-release: 'v2.1.1'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push for Dockerfile.devcontainer
      - name: Extract Docker metadata for devcontainer
        id: meta-devcontainer
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/0xCarbon/devcontainer

      - name: Build and push Docker image for devcontainer
        id: build-and-push-devcontainer
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          file: ./Dockerfile.devcontainer
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-devcontainer.outputs.tags }}
          labels: ${{ steps.meta-devcontainer.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker image for devcontainer
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta-devcontainer.outputs.tags }}
          DIGEST: ${{ steps.build-and-push-devcontainer.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

      # Build and push for Dockerfile.runtime
      - name: Extract Docker metadata for runtime
        id: meta-runtime
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/0xCarbon/runtime

      - name: Build and push Docker image for runtime
        id: build-and-push-runtime
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          file: ./Dockerfile.runtime
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-runtime.outputs.tags }}
          labels: ${{ steps.meta-runtime.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker image for runtime
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta-runtime.outputs.tags }}
          DIGEST: ${{ steps.build-and-push-runtime.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
